---

- name: "GVM | Install default version"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ GVM_DEST }}/bin/gvm install go{{ go_version }} {{ go_install_flag }}"
  environment:
    GVM_ROOT: "{{ go_location }}"
  when: '"{{ go_version }}" != "master" and "{{ go_version }}" not in "{{ go_versions }}" and "{{ go_version }}" not in "{{ all_go_versions.stdout_lines | default() }}"'

- name: "GVM | Install all requested versions"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ GVM_DEST }}/bin/gvm install go{{ item }} {{ go_install_flag }}"
  environment:
    GVM_ROOT: "{{ go_location }}"
  with_items:
  - 1.4
  - "{{ go_versions }}"
  when: '"{{ item }}" != "master" and "{{ item }}" not in "{{ go_version }}" and "{{ item }}" not in "{{ all_go_versions.stdout_lines }}"'

- name: "GVM | Get current version"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "go version"
  environment:
    GVM_ROOT: "{{ go_location }}"
  register: current_go_version
  failed_when: false

- name: "GVM | Set default version"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ go_location }}/scripts/gvm_use_custom use {{ go_version }} --default"
  environment:
    GVM_ROOT: "{{ go_location }}"
  when: '"{{ go_version }}" != "master" and "{{ go_version }}" not in "{{ current_go_version.stdout }}"'
  failed_when: false

- name: "GVM | Verify version"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ go_location }}/bin/gvm list"
  environment:
    GVM_ROOT: "{{ go_location }}"
  register: current_go_version_new
  failed_when: '"go{{ go_version }}" not in "{{ current_go_version_new.stdout }}"'