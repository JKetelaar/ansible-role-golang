---
- name: "Go-Lang | Define shell exports"
  set_fact:
    shell_exports:
    - regex: "export GOROOT"
      lineinfile: "export GOROOT={{ GOROOT }}"
    - regex: "export GOPATH"
      lineinfile: "export GOPATH={{ GOPATH }}"
    - regex: "PATH:{{ GOPATH }}"
      lineinfile: "export PATH=$PATH:{{ GOPATH }}"
    - regex: "PATH:{{ GOPATH }}/bin"
      lineinfile: "export PATH=$PATH:{{ GOPATH }}/bin"
  when: shell_exports is not defined

- name: "Go-Lang | Include bootstrap tasks"
  include: install-bootstrap.yml
  when:
    - install_go_bootstrap|bool == true
    - go_binary_bootstrap.stat.exists|bool == false
    - GOROOT_BOOTSTRAP is defined
    - '"go{{ go_version }}" not in current_go_version'

- name: "Go-Lang | Include source build tasks"
  include: install-git.yml
  when:
    - build_go_from_source|bool == true
    - '"go{{ go_version }}" not in current_go_version'

- name: "Go-Lang | Include distro install tasks"
  include: install-distro.yml
  when:
    - build_go_from_source|bool == false
    - '"go{{ go_version }}" not in current_go_version'

- name: "Go-Lang | Detect configured shell profiles"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  stat:
    path: "{{ fubarhouse_user_dir }}/{{ item }}"
  changed_when: false
  failed_when: false
  with_items: "{{ shell_profiles }}"
  register: stat_shell_profiles
  when:
  - stat_shell_profiles is defined
  - shell_profiles is defined

- name: "Go-Lang | Ensure shell profiles are configured"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  lineinfile:
    dest: "{{ item[0].stat.path }}"
    regexp: "{{ item[1].regex }}"
    line: "{{ item[1].lineinfile }}"
    state: present
  with_nested:
  - "{{ stat_shell_profiles.results }}"
  - "{{ shell_exports }}"
  when:
  - stat_shell_profiles is defined
  - shell_profiles is defined
  - item[0].stat.exists|bool == true

- name: "Go-Lang | Verify version"
  shell: "{{ GOPATH }}/go version"
  environment:
    GOROOT: "{{ GOROOT }}"
    GOPATH: "{{ GOPATH }}"
  register: go_version_output
  failed_when: '"go{{ go_version }}" not in go_version_output.stdout'
  changed_when: false

- name: "Go-Lang | Restart shell"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ fubarhouse_user_dir }}/{{ item }}"
  with_items: "{{ shell_profiles }}"
  failed_when: false
