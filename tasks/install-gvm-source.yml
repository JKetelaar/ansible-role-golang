---

- name: "GVM | Install Go compiler"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ GVM_DEST }}/bin/gvm install go1.4 {{ go_install_flag }}"
  environment:
    GVM_ROOT: "{{ go_location }}"
  when: '"go1.4" not in "{{ all_go_versions.stdout_lines | default() }}"'

- name: "GVM | Install all requested versions"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ GVM_DEST }}/bin/gvm install {{ item }}"
  environment:
    GVM_ROOT: "{{ go_location }}"
    GOROOT_BOOTSTRAP: "{{ go_location }}/gos/go1.4/"
  with_items:
  - "{{ go_version }}"
  - "{{ go_versions }}"

- name: "GVM | Refresh environment urls"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "source {{ go_location }}/scripts/gvm-default"
  failed_when: false

- name: "GVM | Get current version"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "go version"
  environment:
    GVM_ROOT: "{{ go_location }}"
  register: current_go_version
  failed_when: false

- name: "GVM | Set default version"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ go_location }}/scripts/gvm_use_custom use {{ go_version }} --default"
  environment:
    GVM_ROOT: "{{ go_location }}"
  when: '"{{ go_version }}" not in "{{ current_go_version.stdout | default() }}"'
  failed_when: false

- name: "GVM | Verify version"
  become: yes
  become_user: "{{ fubarhouse_user }}"
  shell: "{{ go_location }}/bin/gvm list"
  environment:
    GVM_ROOT: "{{ go_location }}"
  register: current_go_version_new
  failed_when: '"{{ go_version }}" not in "{{ current_go_version_new.stdout | default() }}"'